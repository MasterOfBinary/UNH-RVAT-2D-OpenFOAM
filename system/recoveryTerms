/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.4.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/


    recoveryTerms
    {
        functionObjectLibs ("libutilityFunctionObjects.so");
        type coded;
        // Name of on-the-fly generated functionObject
        redirectType writeRecoveryTerms;
        code
        #{
            const volVectorField& U = mesh().lookupObject<volVectorField>("U");
            const volScalarField Ux = U.component(0);
            const volScalarField& p = mesh().lookupObject<volScalarField>("p");
            
            volVectorField gradP = fvc::grad(p);
            
            volScalarField gradPx
            (
                IOobject
                (
                    "gradPx",
                    mesh().time().timeName(),
                    mesh(),
                    IOobject::NO_READ,
                    IOobject::AUTO_WRITE
                ),
                gradP.component(0)
            );
            
            volVectorField gradUx
            (
                IOobject
                (
                    "gradUx",
                    mesh().time().timeName(),
                    mesh(),
                    IOobject::NO_READ,
                    IOobject::AUTO_WRITE
                ),
                fvc::grad(Ux)
            );

            volScalarField laplacianUx
            (
                IOobject
                (
                    "laplacianUx",
                    mesh().time().timeName(),
                    mesh(),
                    IOobject::NO_READ,
                    IOobject::AUTO_WRITE
                ),
                fvc::laplacian(Ux)
            );

            gradPx.write();
            gradUx.write();
            laplacianUx.write();
        #};
    }

// ************************************************************************* //
